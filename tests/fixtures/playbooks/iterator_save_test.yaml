apiVersion: noetl.io/v1
kind: Playbook

metadata:
  name: iterator_save_test
  path: tests/iterator_save_test

workload:
  pg_auth: pg_local
  items:
    - name: "item1"
      value: 100
    - name: "item2"
      value: 200
    - name: "item3"
      value: 300

workflow:
- step: start
  desc: Start test
  next:
  - step: create_table
  
- step: create_table
  desc: Create test table
  type: postgres
  auth: "{{ workload.pg_auth }}"
  command: |
    CREATE TABLE IF NOT EXISTS public.iterator_save_test (
      id TEXT PRIMARY KEY,
      execution_id TEXT,
      item_name TEXT,
      item_value INTEGER,
      created_at TIMESTAMPTZ DEFAULT now()
    );
  next:
  - step: process_items

- step: process_items
  desc: Process items with save
  type: iterator
  collection: "{{ workload.items }}"
  element: item
  mode: sequential
  task:
    type: python
    code: |
      def main(input_data):
          return {
              'item_name': input_data.get('name'),
              'item_value': input_data.get('value')
          }
    save:
      storage: postgres
      args:
        id: "{{ execution_id }}:{{ item.name }}"
        execution_id: "{{ execution_id }}"
        item_name: "{{ item.name }}"
        item_value: "{{ item.value }}"
      auth: "{{ workload.pg_auth }}"
      table: public.iterator_save_test
      mode: upsert
      key: id
  next:
  - step: end
    
- step: end
  desc: End test
