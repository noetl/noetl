apiVersion: noetl.io/v1
kind: Playbook
metadata:
  name: loop_controller_numbers
  path: examples/test/loop_controller_numbers
workload:
  numbers:
  - 1
  - 2
  - 3
  - 4
workflow:
- step: start
  next:
  - step: ensure_table
- step: ensure_table
  desc: Ensure results table exists
  type: postgres
  auth:
    pg:
      type: postgres
      key: pg_local
  command: "CREATE TABLE IF NOT EXISTS public.loop_numbers (\n  id TEXT PRIMARY KEY,\n\
    \  execution_id TEXT,\n  iter_index INTEGER,\n  input_val INTEGER,\n  output_val\
    \ INTEGER,\n  created_at TIMESTAMPTZ DEFAULT now()\n);\n"
  next:
  - step: ensure_table_agg
- step: ensure_table_agg
  desc: Ensure aggregated results table exists
  type: postgres
  auth:
    pg:
      type: postgres
      key: pg_local
  command: "CREATE TABLE IF NOT EXISTS public.loop_numbers_agg (\n  execution_id TEXT\
    \ PRIMARY KEY,\n  results_json JSONB,\n  count INTEGER,\n  created_at TIMESTAMPTZ\
    \ DEFAULT now()\n);\n"
  next:
  - step: loop_numbers
- step: loop_numbers
  desc: 'Loop controller: Python per number, save each row'
  type: iterator
  element: n
  task:
    data:
      value: '{{ n }}'
    name: square
    type: python
    code: "def main(value: int):\n    return {\"value\": int(value), \"square\": int(value)\
      \ * int(value)}\n"
    save:
      data:
        id: '{{ execution_id }}:{{ loop_numbers.result_index }}'
        execution_id: '{{ execution_id }}'
        iter_index: '{{ loop_numbers.result_index }}'
        input_val: '{{ data.value }}'
        output_val: '{{ data.square }}'
      storage: postgres
      auth:
        pg:
          type: postgres
          key: pg_local
      table: public.loop_numbers
      mode: upsert
      key: id
  save:
    data:
      execution_id: '{{ execution_id }}'
      results_json: '{{ results | tojson }}'
      count: '{{ count }}'
    storage: postgres
    auth:
      pg:
        type: postgres
        key: pg_local
    table: public.loop_numbers_agg
    mode: upsert
    key: execution_id
  next:
  - step: end
  data: '{{ workload.numbers }}'
- step: end
  desc: Finish
