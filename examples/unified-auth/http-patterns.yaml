apiVersion: noetl.io/v1
kind: Playbook

metadata:
  name: unified_auth_http_patterns
  path: examples/unified-auth/http-patterns

workload:
  message: "Demonstrate various HTTP auth patterns"
  api_base: "https://api.example.com"

workflow:
  - step: start
    desc: "Start HTTP auth patterns demo"
    next:
      - step: bearer_token_auth

  # Bearer Token Authentication
  - step: bearer_token_auth
    desc: "HTTP request with Bearer token auth"
    type: http
    method: GET
    endpoint: "{{ workload.api_base }}/bearer-protected"
    auth:
      type: bearer
      env: API_BEARER_TOKEN
    next:
      - step: basic_auth

  # Basic Authentication
  - step: basic_auth
    desc: "HTTP request with Basic authentication"
    type: http
    method: GET
    endpoint: "{{ workload.api_base }}/basic-protected"
    auth:
      type: basic
      inline:
        username: demo_user
        password: "{{ secrets.demo_password }}"
    next:
      - step: api_key_auth

  # API Key Authentication
  - step: api_key_auth
    desc: "HTTP request with API key in header"
    type: http
    method: POST
    endpoint: "{{ workload.api_base }}/api-key-protected"
    headers:
      Content-Type: application/json
    payload:
      message: "{{ workload.message }}"
      timestamp: "{{ now() }}"
    auth:
      type: api_key
      credential: external_api_key
    next:
      - step: custom_header_auth

  # Custom Header Authentication
  - step: custom_header_auth
    desc: "HTTP request with custom authentication headers"
    type: http
    method: GET
    endpoint: "{{ workload.api_base }}/custom-protected"
    auth:
      type: header
      inline:
        Authorization: "Custom {{ secrets.custom_token }}"
        X-Client-ID: "noetl-unified-auth-demo"
        X-Request-ID: "{{ execution_id }}"
    next:
      - step: credential_store_auth

  # Credential Store Authentication
  - step: credential_store_auth
    desc: "HTTP request using credential store for complex auth"
    type: http
    method: PUT
    endpoint: "{{ workload.api_base }}/credential-protected"
    headers:
      Content-Type: application/json
    payload:
      action: "update"
      data: "{{ workload.message }}"
    auth:
      type: bearer
      credential: stored_bearer_token
    next:
      - step: end

  - step: end
    desc: "End HTTP auth patterns demo"

# Required credentials:
# - external_api_key: {"key": "X-API-Key", "value": "your-api-key"}
# - stored_bearer_token: {"token": "your-bearer-token"}
#
# Required environment variables:
# - API_BEARER_TOKEN: Bearer token for first request
#
# Required secrets in context:
# - demo_password: Password for basic auth
# - custom_token: Token for custom header auth