apiVersion: apps/v1
kind: Deployment
metadata:
  name: noetl-server
  namespace: noetl
  labels:
    app: noetl-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: noetl-server
  template:
    metadata:
      labels:
        app: noetl-server
    spec:
      containers:
        - name: noetl-server
          # image name and tag must be patched dynamically
          image: image_name:image_tag
          ports:
            - containerPort: 8082
          envFrom:
            - configMapRef:
                name: noetl-config
            - secretRef:
                name: noetl-secret
          volumeMounts:
            - name: noetl-data
              mountPath: /opt/noetl/data
            - name: noetl-logs
              mountPath: /opt/noetl/logs
          command: ["/opt/noetl/.venv/bin/python3"]
          args: ["-m", "uvicorn", "noetl.server:create_app", "--factory", "--host", "0.0.0.0", "--port", "8082", "--log-level", "info"]
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "0.5"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: noetl-data
          persistentVolumeClaim:
            claimName: noetl-data
        - name: noetl-logs
          persistentVolumeClaim:
            claimName: noetl-logs
