apiVersion: workflow.noetl.io/v1
kind: Workflow
metadata:
  name: example-workflow
spec:
  schedule: "*/5 * * * *"
  vars:
    timeout: 60
  initialState: ready
  transitions:
    ready: [running]
    running: [idle, paused, completed, failed, terminated]
    idle: [running]
    paused: [running]
  conditions:
    - "'{{workflow.variables.example_workflow.status}}' == 'ready'"
  templates:
    - name: hello-world-template
      inputs:
        - example_input
      outputs:
        - example_output
      execute:
        - type: shell
          command: "echo '{{inputs.example_input}}'"
          args: "{{example_workflow.actions.action1.execute.shell.output}}"
        - type: shell
          command: "echo 'Hello, World 2'"
          output: "{{outputs.example_output}}"
        - type: httpRequest
          method: GET
          url: "https://api.github.com/octocat"
          query: "{{example_workflow.actions.action1.execute.httpRequest.output}}"
        - type: postgres
          sql: "select * from emp where id = '{{inputs.id}}'"
          output: "{{outputs.example_output.sql}}"
    - name: message-template
      inputs:
        - message_content
      execute:
        - type: message
          content: "{{inputs.message_content}}"
          destination: "my-messaging-topic"
  actions:
    - name: action1
      runtime: docker
      labels:
        environment: production
        version: 1.0
        actionGroup: group1
      conditions:
        start:
          - "'{{example_workflow.actions.action2.status}}' == 'ready'"
        exit:
          - "'{{example_workflow.actions.action2.status}}' == 'idle'"
      envs:
        PATH: "/noetl/bin"
      inputs:
        - name: example_input
          value: "Hello, World 1"
      outputs:
        - name: example_output
          valueFrom:
            path: "{{example_workflow.actions.action1.execute.shell.output}}"
      template: hello-world-template
    - name: action2
      runtime: docker
      labels:
        environment: production
        version: 1.0
        actionGroup: group1
      schedule: "0 12 * * *"
      inputs:
        - name: message_content
          value: "This is a message!"
      template: message-template
