version: 0.1
name: demo workflow
id: demo-workflow
working_directory: .
  vars:
    ENV: staging
  outputs:
    workflow_exit_code:
      name: workflow exit code
      value: success
jobs:
   demo_create_files:
      name: Demonstration of terminal execution
      vars:
         HOST: ${HOST}
         ENVIRONMENT: ${ENV}
         DIR: ${WORKING_DIR}
      message: The job demo_create_files finished with exit code: ${outputs.exit_code}
      tasks:
         start:
            name: Hello
            vars:
               msg: Hello ${HOST}
            rule: ${jobs.demo_create_files.outputs = None}
            loop:
               type: number
               from: 1
               to: 10
               increment: 1
               exclude: [5,6]
               wait: 1s
               parallel: true
            steps:
              name: call remote site
              id: call-remote-site
              type: shell # (shell, http, docker)
              - echo ${.msg}
              - echo "Bye ${loop.value}"
            outputs:
               message_exit_code: exit_code
               failures: number_of_failures
         another_task:
            name: Task #2
            vars:
               msg: Hello ${HOST}
            rule: ${jobs.demo_create_files.tasks.start.outputs.exit_code = Done}
            loop:
               from: 1
               to: 10
               increment: 1
               exclude: [5,6]
               wait: 1s
               parallel: false
            steps:
              name: call remote site
              id: call-remote-site
              type: shell # (shell, http, docker)
              - echo ${.msg}
              - echo "Bye ${loop.value}"
            outputs:
               message_exit_code: exit_code
               failures: number_of_failures
